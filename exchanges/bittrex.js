'use strict';

const request = require('request');

const pairs = [
  'btc-ltc',
  'btc-doge',
  'btc-vtc',
  'btc-ppc',
  'btc-ftc',
  'btc-rdd',
  'btc-nxt',
  'btc-dash',
  'btc-pot',
  'btc-blk',
  'btc-emc2',
  'btc-xmy',
  'btc-aur',
  'btc-efl',
  'btc-gld',
  'btc-slr',
  'btc-ptc',
  'btc-grs',
  'btc-nlg',
  'btc-rby',
  'btc-xwc',
  'btc-mona',
  'btc-thc',
  'btc-enrg',
  'btc-erc',
  'btc-naut',
  'btc-vrc',
  'btc-cure',
  'btc-xbb',
  'btc-xmr',
  'btc-cloak',
  'btc-start',
  'btc-kore',
  'btc-xdn',
  'btc-trust',
  'btc-nav',
  'btc-xst',
  'btc-btcd',
  'btc-via',
  'btc-uno',
  'btc-pink',
  'btc-ioc',
  'btc-cann',
  'btc-sys',
  'btc-neos',
  'btc-dgb',
  'btc-burst',
  'btc-excl',
  'btc-swift',
  'btc-dope',
  'btc-block',
  'btc-aby',
  'btc-byc',
  'btc-xmg',
  'btc-blitz',
  'btc-bay',
  'btc-bts',
  'btc-fair',
  'btc-spr',
  'btc-vtr',
  'btc-xrp',
  'btc-game',
  'btc-coval',
  'btc-nxs',
  'btc-xcp',
  'btc-bitb',
  'btc-geo',
  'btc-fldc',
  'btc-grc',
  'btc-flo',
  'btc-nbt',
  'btc-mue',
  'btc-xem',
  'btc-clam',
  'btc-dmd',
  'btc-gam',
  'btc-sphr',
  'btc-ok',
  'btc-snrg',
  'btc-pkb',
  'btc-cpc',
  'btc-aeon',
  'btc-eth',
  'btc-gcr',
  'btc-tx',
  'btc-bcy',
  'btc-exp',
  'btc-infx',
  'btc-omni',
  'btc-amp',
  'btc-agrs',
  'btc-xlm',
  'btc-bta',
  'usdt-btc',
  'bitcny-btc',
  'btc-club',
  'btc-vox',
  'btc-emc',
  'btc-fct',
  'btc-maid',
  'btc-egc',
  'btc-sls',
  'btc-rads',
  'btc-dcr',
  'btc-safex',
  'btc-bsd',
  'btc-xvg',
  'btc-pivx',
  'btc-xvc',
  'btc-meme',
  'btc-steem',
  'btc-2give',
  'btc-lsk',
  'btc-pdc',
  'btc-brk',
  'btc-dgd',
  'eth-dgd',
  'btc-waves',
  'btc-rise',
  'btc-lbc',
  'btc-sbd',
  'btc-brx',
  'btc-draco',
  'btc-etc',
  'eth-etc',
  'btc-strat',
  'btc-unb',
  'btc-synx',
  'btc-trig',
  'btc-ebst',
  'btc-vrm',
  'btc-seq',
  'btc-xaur',
  'btc-sngls',
  'btc-rep',
  'btc-shift',
  'btc-ardr',
  'btc-xzc',
  'btc-neo',
  'btc-zec',
  'btc-zcl',
  'btc-iop',
  'btc-dar',
  'btc-golos',
  'btc-hkg',
  'btc-ubq',
  'btc-kmd',
  'btc-gbg',
  'btc-sib',
  'btc-ion',
  'btc-lmc',
  'btc-qwark',
  'btc-crw',
  'btc-swt',
  'btc-time',
  'btc-mln',
  'btc-ark',
  'btc-dyn',
  'btc-tks',
  'btc-music',
  'btc-dtb',
  'btc-incnt',
  'btc-gbyte',
  'btc-gnt',
  'btc-nxc',
  'btc-edg',
  'btc-lgd',
  'btc-trst',
  'eth-gnt',
  'eth-rep',
  'usdt-eth',
  'eth-wings',
  'btc-wings',
  'btc-rlc',
  'btc-gno',
  'btc-gup',
  'btc-lun',
  'eth-gup',
  'eth-rlc',
  'eth-lun',
  'eth-sngls',
  'eth-gno',
  'btc-apx',
  'btc-tkn',
  'eth-tkn',
  'btc-hmq',
  'eth-hmq',
  'btc-ant',
  'eth-trst',
  'eth-ant',
  'btc-sc',
  'eth-bat',
  'btc-bat',
  'btc-zen',
  'btc-1st',
  'btc-qrl',
  'eth-1st',
  'eth-qrl',
  'btc-crb',
  'eth-crb',
  'eth-lgd',
  'btc-ptoy',
  'eth-ptoy',
  'btc-myst',
  'eth-myst',
  'btc-cfi',
  'eth-cfi',
  'btc-bnt',
  'eth-bnt',
  'btc-nmr',
  'eth-nmr',
  'eth-time',
  'eth-ltc',
  'eth-xrp',
  'btc-snt',
  'eth-snt',
  'btc-dct',
  'btc-xel',
  'btc-mco',
  'eth-mco',
  'btc-adt',
  'eth-adt',
  'btc-fun',
  'eth-fun',
  'btc-pay',
  'eth-pay',
  'btc-mtl',
  'eth-mtl',
  'btc-storj',
  'eth-storj',
  'btc-adx',
  'eth-adx',
  'eth-dash',
  'eth-sc',
  'eth-zec',
  'usdt-zec',
  'usdt-ltc',
  'usdt-etc',
  'usdt-xrp',
  'btc-omg',
  'eth-omg',
  'btc-cvc',
  'eth-cvc',
  'btc-part',
  'btc-qtum',
  'eth-qtum',
  'eth-xmr',
  'eth-xem',
  'eth-xlm',
  'eth-neo',
  'usdt-xmr',
  'usdt-dash',
  'eth-bcc',
  'usdt-bcc',
  'btc-bcc',
  'usdt-neo',
  'eth-waves',
  'eth-strat',
  'eth-dgb',
  'eth-fct',
  'eth-bts'
];

module.exports = {
	pairs,
	ticker: (pair) => {
		return new Promise((resolve, reject) => {
			if(pairs.includes(pair)) {
				request({
					url: `https://bittrex.com/api/v1.1/public/getticker?market=${pair}`,
					timeout: 2000
				}, (err, res, body) => {
					if(!err && res.statusCode === 200) {
						const x = JSON.parse(body)["result"];
						console.log(x);
						resolve({
							exchange: 'bittrex',
							pair: pair,
							timestamp: (new Date()).getTime(),
							ask: parseFloat(x.Ask),
							bid: parseFloat(x.Bid)
						});
					}
					else {
						resolve({
							exchange: 'bittrex',
							pair: pair,
							timestamp: undefined,
							ask: undefined,
							bid: undefined
						});
					}
				});
			}
			else {
				reject('pair is not supported');
			}
		});
	}
};
